digraph dependencies {
node[style=filled]
"checker/Substitution" -> "checker/All"
"template-coq/Universes"[label="Universes", color=aquamarine]
"pcuic/PCUICPretty" -> "safechecker/PCUICSafeChecker"
"template-coq/utils/MCEquality"[label="MCEquality", color=aquamarine]
"template-coq/Environment"[label="Environment", color=aquamarine]
"erasure/EWcbvEval" -> "erasure/EAll"
"pcuic/PCUICInduction"[label="PCUICInduction", color=lemonchiffon1]
"safechecker/PCUICSafeRetyping" -> "erasure/SafeErasureFunction"
"template-coq/utils/MCOption"[label="MCOption", color=aquamarine]
"checker/Closed" -> "checker/Weakening"
"template-coq/monad_utils" -> "template-coq/TemplateMonad/Core"
"template-coq/Ast" -> "template-coq/AstUtils"
"template-coq/utils" -> "template-coq/BasicAst"
"template-coq/AstUtils" -> "template-coq/Induction"
"erasure/ESubstitution" -> "erasure/ErasureCorrectness"
"pcuic/PCUICGeneration" -> "pcuic/TemplateToPCUICCorrectness"
"template-coq/utils/MCEquality" -> "template-coq/utils"
"template-coq/TemplateMonad"[label="TemplateMonad", color=aquamarine]
"erasure/EAst" -> "erasure/Extract"
"template-coq/TemplateMonad/Common"[label="Common", color=aquamarine]
"erasure/ELiftSubst" -> "erasure/EGlobalEnv"
"template-coq/UnivSubst" -> "template-coq/Extraction"
"template-coq/utils/MCRelations"[label="MCRelations", color=aquamarine]
"pcuic/PCUICInversion"[label="PCUICInversion", color=lemonchiffon1]
"template-coq/TemplateMonad/Common" -> "template-coq/TemplateMonad/Core"
"pcuic/PCUICRetyping"[label="PCUICRetyping", color=lemonchiffon1]
"pcuic/PCUICTyping" -> "pcuic/PCUICChecker"
"template-coq/AstUtils" -> "template-coq/WfInv"
"erasure/Extraction"[label="Extraction", color=tan]
"pcuic/PCUICNameless" -> "pcuic/PCUICSafeLemmata"
"pcuic/PCUICWeakening" -> "pcuic/PCUICUnivSubstitution"
"pcuic/PCUICChecker"[label="PCUICChecker", color=lemonchiffon1]
"pcuic/PCUICTyping" -> "pcuic/PCUICNameless"
"pcuic/PCUICParallelReduction"[label="PCUICParallelReduction", color=lemonchiffon1]
"template-coq/utils/MCRelations" -> "template-coq/utils/All_Forall"
"pcuic/PCUICAstUtils"[label="PCUICAstUtils", color=lemonchiffon1]
"pcuic/TemplateToPCUIC" -> "safechecker/SafeTemplateChecker"
"safechecker/PCUICSafeReduce" -> "safechecker/PCUICSafeConversion"
"pcuic/PCUICSafeLemmata"[label="PCUICSafeLemmata", color=lemonchiffon1]
"checker/Reflect"[label="Reflect", color=seagreen3]
"pcuic/PCUICTyping" -> "pcuic/PCUICMetaTheory"
"pcuic/PCUICWeakeningEnv" -> "pcuic/PCUICClosed"
"pcuic/PCUICPosition"[label="PCUICPosition", color=lemonchiffon1]
"erasure/SafeErasureFunction" -> "erasure/SafeTemplateErasure"
"template-coq/Environment" -> "pcuic/PCUICAst"
"template-coq/TemplateMonad/Core"[label="Core", color=aquamarine]
"template-coq/utils/MCProd" -> "template-coq/utils/All_Forall"
"checker/Retyping"[label="Retyping", color=seagreen3]
"checker/All"[label="checker/All", color=seagreen3]
"template-coq/utils/MCSquash" -> "template-coq/utils/All_Forall"
"pcuic/PCUICConversion" -> "pcuic/PCUICInversion"
"template-coq/utils/MCList" -> "template-coq/utils/All_Forall"
"template-coq/LiftSubst" -> "template-coq/UnivSubst"
"erasure/EAst"[label="EAst", color=tan]
"erasure/EAll"[label="EAll", color=tan]
"safechecker/PCUICSafeReduce"[label="PCUICSafeReduce", color=paleturquoise1]
"checker/Reflect" -> "checker/Generation"
"pcuic/PCUICAlpha"[label="PCUICAlpha", color=lemonchiffon1]
"template-coq/utils/MCCompare"[label="MCCompare", color=aquamarine]
"safechecker/PCUICSafeChecker" -> "safechecker/PCUICSafeRetyping"
"erasure/EGlobalEnv" -> "erasure/EPretty"
"template-coq/TemplateMonad/Extractable" -> "template-coq/Constants"
"pcuic/PCUICTyping" -> "pcuic/PCUICNormal"
"erasure/EArities" -> "erasure/Prelim"
"template-coq/Typing" -> "checker/Normal"
"pcuic/PCUICInduction" -> "pcuic/PCUICLiftSubst"
"erasure/EWndEval"[label="EWndEval", color=tan]
"template-coq/UnivSubst" -> "template-coq/Typing"
"pcuic/PCUICPrincipality" -> "pcuic/PCUICValidity"
"erasure/SafeErasureFunction"[label="SafeErasureFunction", color=tan]
"pcuic/PCUICWeakening"[label="PCUICWeakening", color=lemonchiffon1]
"pcuic/PCUICAlpha" -> "pcuic/PCUICSR"
"pcuic/TemplateToPCUICCorrectness"[label="TemplateToPCUICCorrectness", color=lemonchiffon1]
"template-coq/common/uGraph" -> "safechecker/PCUICSafeConversion"
"erasure/ErasureFunction"[label="ErasureFunction", color=tan]
"template-coq/EnvironmentTyping" -> "pcuic/PCUICTyping"
"checker/Weakening" -> "checker/Substitution"
"template-coq/Pretty" -> "erasure/SafeTemplateErasure"
"template-coq/BasicAst"[label="BasicAst", color=aquamarine]
"template-coq/Loader" -> "template-coq/All"
"template-coq/UnivSubst"[label="UnivSubst", color=aquamarine]
"erasure/Extract" -> "erasure/EAll"
"template-coq/AstUtils" -> "template-coq/TemplateMonad/Core"
"erasure/EAst" -> "erasure/EInduction"
"pcuic/PCUICConfluence"[label="PCUICConfluence", color=lemonchiffon1]
"template-coq/Universes" -> "erasure/EAst"
"template-coq/Loader"[label="Loader", color=aquamarine]
"template-coq/EnvironmentTyping"[label="EnvironmentTyping", color=aquamarine]
"template-coq/utils/LibHypsNaming" -> "pcuic/PCUICTyping"
"template-coq/utils/MCOption" -> "template-coq/utils/All_Forall"
"pcuic/PCUICReduction" -> "pcuic/PCUICWeakening"
"pcuic/PCUICLiftSubst" -> "pcuic/PCUICEquality"
"pcuic/PCUICPrincipality"[label="PCUICPrincipality", color=lemonchiffon1]
"template-coq/utils/MCList"[label="MCList", color=aquamarine]
"safechecker/PCUICSafeRetyping"[label="PCUICSafeRetyping", color=paleturquoise1]
"pcuic/PCUICParallelReduction" -> "pcuic/PCUICParallelReductionConfluence"
"template-coq/utils/MCString"[label="MCString", color=aquamarine]
"erasure/ESubstitution"[label="ESubstitution", color=tan]
"safechecker/SafeTemplateChecker" -> "safechecker/Extraction"
"erasure/SafeTemplateErasure" -> "erasure/Extraction"
"template-coq/Universes" -> "template-coq/Environment"
"template-coq/utils/LibHypsNaming" -> "checker/WeakeningEnv"
"template-coq/utils/MCCompare" -> "template-coq/utils/MCString"
"safechecker/PCUICSafeConversion" -> "safechecker/PCUICSafeChecker"
"pcuic/PCUICMetaTheory"[label="PCUICMetaTheory", color=lemonchiffon1]
"pcuic/PCUICNormal" -> "pcuic/PCUICSafeLemmata"
"template-coq/TemplateMonad" -> "template-coq/Constants"
"safechecker/PCUICSafeConversion"[label="PCUICSafeConversion", color=paleturquoise1]
"checker/Generation"[label="Generation", color=seagreen3]
"pcuic/PCUICAstUtils" -> "pcuic/PCUICUtils"
"template-coq/Extraction"[label="Extraction", color=aquamarine]
"pcuic/PCUICUnivSubst"[label="PCUICUnivSubst", color=lemonchiffon1]
"template-coq/config" -> "template-coq/Universes"
"pcuic/PCUICInduction" -> "pcuic/PCUICReflect"
"pcuic/PCUICWeakeningEnv"[label="PCUICWeakeningEnv", color=lemonchiffon1]
"template-coq/Pretty"[label="Pretty", color=aquamarine]
"template-coq/monad_utils" -> "template-coq/Typing"
"template-coq/WfInv"[label="WfInv", color=aquamarine]
"pcuic/PCUICAstUtils" -> "pcuic/PCUICLiftSubst"
"pcuic/PCUICTyping" -> "pcuic/PCUICReduction"
"erasure/Prelim" -> "erasure/ESubstitution"
"template-coq/Constants" -> "template-coq/Loader"
"template-coq/utils/MCString" -> "template-coq/utils"
"pcuic/PCUICChecker" -> "pcuic/PCUICRetyping"
"pcuic/PCUICCheckerCompleteness"[label="PCUICCheckerCompleteness", color=lemonchiffon1]
"pcuic/PCUICSubstitution" -> "pcuic/PCUICParallelReduction"
"template-coq/All"[label="template-coq/All", color=aquamarine]
"erasure/ErasureCorrectness" -> "erasure/SafeErasureFunction"
"template-coq/TypingWf" -> "pcuic/TemplateToPCUICCorrectness"
"pcuic/PCUICTyping" -> "pcuic/PCUICWeakeningEnv"
"pcuic/PCUICEquality" -> "pcuic/PCUICPosition"
"erasure/ELiftSubst"[label="ELiftSubst", color=tan]
"erasure/ErasureFunction" -> "erasure/SafeTemplateErasure"
"safechecker/Extraction"[label="Extraction", color=paleturquoise1]
"template-coq/Universes" -> "template-coq/common/uGraph"
"checker/Generation" -> "checker/Substitution"
"checker/Checker"[label="Checker", color=seagreen3]
"safechecker/SafeTemplateChecker" -> "erasure/SafeTemplateErasure"
"template-coq/WfInv" -> "checker/WcbvEval"
"pcuic/PCUICSubstitution" -> "pcuic/TemplateToPCUICCorrectness"
"template-coq/Environment" -> "template-coq/Ast"
"template-coq/Typing"[label="Typing", color=aquamarine]
"pcuic/PCUICLiftSubst" -> "pcuic/PCUICUnivSubst"
"template-coq/utils/MCArith" -> "template-coq/utils"
"template-coq/utils/MCProd"[label="MCProd", color=aquamarine]
"template-coq/AstUtils" -> "template-coq/TemplateMonad/Extractable"
"pcuic/TemplateToPCUIC"[label="TemplateToPCUIC", color=lemonchiffon1]
"pcuic/PCUICGeneration" -> "pcuic/PCUICValidity"
"template-coq/Induction"[label="Induction", color=aquamarine]
"checker/Normal"[label="Normal", color=seagreen3]
"pcuic/PCUICMetaTheory" -> "erasure/EInversion"
"template-coq/Typing" -> "checker/Generation"
"pcuic/PCUICElimination" -> "erasure/Extract"
"pcuic/PCUICSR" -> "pcuic/PCUICSafeLemmata"

"pcuic/PCUICSafeLemmata" -> "pcuic/PCUICElimination"
"template-coq/Constants"[label="Constants", color=aquamarine]
"pcuic/PCUICNormal"[label="PCUICNormal", color=lemonchiffon1]
"pcuic/PCUICGeneration"[label="PCUICGeneration", color=lemonchiffon1]
"pcuic/PCUICClosed" -> "pcuic/PCUICWeakening"
"template-coq/TemplateMonad/Common" -> "template-coq/TemplateMonad/Extractable"
"template-coq/monad_utils" -> "template-coq/common/uGraph"
"pcuic/PCUICNameless"[label="PCUICNameless", color=lemonchiffon1]
"template-coq/common/uGraph" -> "checker/Checker"
"checker/WcbvEval"[label="WcbvEval", color=seagreen3]
"pcuic/PCUICSize" -> "pcuic/PCUICAstUtils"
"template-coq/TemplateMonad/Extractable" -> "template-coq/Extraction"
"pcuic/PCUICParallelReductionConfluence" -> "pcuic/PCUICConfluence"
"pcuic/PCUICTyping" -> "pcuic/PCUICGeneration"
"checker/Reflect" -> "checker/WcbvEval"
"erasure/EInversion"[label="EInversion", color=tan]
"erasure/EWndEval" -> "erasure/EAll"
"erasure/EArities"[label="EArities", color=tan]
"pcuic/PCUICCumulativity"[label="PCUICCumulativity", color=lemonchiffon1]
"template-coq/utils/All_Forall"[label="All_Forall", color=aquamarine]
"checker/Reflect" -> "checker/Weakening"
"pcuic/PCUICSigmaCalculus"[label="PCUICSigmaCalculus", color=lemonchiffon1]
"erasure/EAst" -> "erasure/EAstUtils"
"pcuic/PCUICClosed"[label="PCUICClosed", color=lemonchiffon1]
"pcuic/PCUICSR"[label="PCUICSR", color=lemonchiffon1]
"template-coq/utils/MCArith"[label="MCArith", color=aquamarine]
"pcuic/PCUICSN"[label="PCUICSN", color=lemonchiffon1]
"template-coq/common/uGraph"[label="uGraph", color=aquamarine]
"erasure/EGlobalEnv" -> "erasure/EWndEval"
"pcuic/PCUICSafeLemmata" -> "pcuic/PCUICSN"
"template-coq/utils/wGraph"[label="wGraph", color=aquamarine]
"template-coq/LiftSubst"[label="LiftSubst", color=aquamarine]
"pcuic/PCUICTyping"[label="PCUICTyping", color=lemonchiffon1]
"erasure/SafeTemplateErasure"[label="SafeTemplateErasure", color=tan]
"pcuic/PCUICEquality"[label="PCUICEquality", color=lemonchiffon1]
"pcuic/TemplateToPCUIC" -> "pcuic/TemplateToPCUICCorrectness"
"safechecker/SafeTemplateChecker"[label="SafeTemplateChecker", color=paleturquoise1]
"template-coq/LiftSubst" -> "template-coq/Pretty"
"erasure/EInversion" -> "erasure/ErasureCorrectness"
"template-coq/Typing" -> "checker/WeakeningEnv"
"template-coq/AstUtils" -> "template-coq/EnvironmentTyping"
"pcuic/PCUICSN" -> "safechecker/PCUICSafeReduce"
"safechecker/PCUICSafeChecker" -> "safechecker/SafeTemplateChecker"
"template-coq/utils/MCSquash"[label="MCSquash", color=aquamarine]
"template-coq/Typing" -> "template-coq/TypingWf"
"pcuic/PCUICWeakening" -> "pcuic/PCUICSigmaCalculus"
"pcuic/PCUICInversion" -> "pcuic/PCUICPrincipality"
"pcuic/PCUICReduction"[label="PCUICReduction", color=lemonchiffon1]
"pcuic/PCUICReduction" -> "pcuic/PCUICCumulativity"
"erasure/EAstUtils" -> "erasure/EGlobalEnv"
"template-coq/TemplateMonad/Core" -> "template-coq/TemplateMonad"
"pcuic/PCUICContextConversion" -> "pcuic/PCUICConversion"
"erasure/EWcbvEval"[label="EWcbvEval", color=tan]
"checker/Retyping" -> "checker/All"
"pcuic/PCUICSubstitution"[label="PCUICSubstitution", color=lemonchiffon1]
"checker/WeakeningEnv" -> "checker/Closed"
"template-coq/Pretty" -> "template-coq/Extraction"
"template-coq/monad_utils"[label="monad_utils", color=aquamarine]
"erasure/EWcbvEval" -> "erasure/Prelim"
"erasure/Extract"[label="Extract", color=tan]
"pcuic/PCUICReflect" -> "pcuic/PCUICEquality"
"pcuic/PCUICPretty"[label="PCUICPretty", color=lemonchiffon1]
"template-coq/AstUtils"[label="AstUtils", color=aquamarine]
"pcuic/PCUICValidity"[label="PCUICValidity", color=lemonchiffon1]
"erasure/EAstUtils"[label="EAstUtils", color=tan]
"template-coq/Induction" -> "checker/Reflect"
"pcuic/PCUICConversion"[label="PCUICConversion", color=lemonchiffon1]
"template-coq/Induction" -> "template-coq/LiftSubst"
"template-coq/Ast" -> "template-coq/TemplateMonad/Common"
"pcuic/PCUICAst" -> "pcuic/PCUICSize"
"pcuic/PCUICAst" -> "pcuic/PCUICCheckerCompleteness"
"pcuic/PCUICElimination"[label="PCUICElimination", color=lemonchiffon1]
"template-coq/EnvironmentTyping" -> "template-coq/Typing"
"pcuic/PCUICParallelReductionConfluence"[label="PCUICParallelReductionConfluence", color=lemonchiffon1]
"template-coq/utils/All_Forall" -> "template-coq/utils"
"template-coq/monad_utils" -> "pcuic/PCUICPosition"
"erasure/EInduction"[label="EInduction", color=tan]
"pcuic/PCUICContextConversion"[label="PCUICContextConversion", color=lemonchiffon1]
"template-coq/config"[label="config", color=aquamarine]
"pcuic/PCUICUtils"[label="PCUICUtils", color=lemonchiffon1]
"safechecker/PCUICSafeChecker"[label="PCUICSafeChecker", color=paleturquoise1]
"erasure/Extract" -> "erasure/EArities"
"template-coq/Ast"[label="Ast", color=aquamarine]
"template-coq/Typing" -> "safechecker/SafeTemplateChecker"
"pcuic/PCUICAst"[label="PCUICAst", color=lemonchiffon1]
"pcuic/PCUICUtils" -> "pcuic/PCUICTyping"
"pcuic/PCUICCumulativity" -> "pcuic/PCUICSubstitution"
"checker/Closed"[label="Closed", color=seagreen3]
"pcuic/PCUICAst" -> "pcuic/PCUICInduction"
"pcuic/PCUICWcbvEval"[label="PCUICWcbvEval", color=lemonchiffon1]
"pcuic/PCUICAst" -> "pcuic/TemplateToPCUIC"
"pcuic/PCUICReflect"[label="PCUICReflect", color=lemonchiffon1]
"pcuic/PCUICPosition" -> "pcuic/PCUICTyping"
"pcuic/PCUICUnivSubstitution"[label="PCUICUnivSubstitution", color=lemonchiffon1]
"template-coq/Typing" -> "template-coq/All"
"template-coq/utils"[label="utils", color=aquamarine]
"template-coq/BasicAst" -> "template-coq/Universes"
"erasure/EInduction" -> "erasure/ELiftSubst"
"pcuic/PCUICValidity" -> "pcuic/PCUICAlpha"
"template-coq/TypingWf"[label="TypingWf", color=aquamarine]
"pcuic/PCUICUnivSubstitution" -> "pcuic/PCUICConfluence"
"pcuic/PCUICWeakening" -> "pcuic/PCUICSubstitution"
"pcuic/PCUICReduction" -> "pcuic/PCUICWcbvEval"
"pcuic/PCUICSize"[label="PCUICSize", color=lemonchiffon1]
"erasure/EPretty"[label="EPretty", color=tan]
"template-coq/TypingWf" -> "checker/Weakening"
"erasure/EPretty" -> "erasure/SafeTemplateErasure"
"template-coq/AstUtils" -> "pcuic/TemplateToPCUIC"
"erasure/EGlobalEnv" -> "erasure/EWcbvEval"
"pcuic/PCUICConversion" -> "pcuic/PCUICRetyping"
"erasure/ErasureCorrectness" -> "erasure/ErasureFunction"
"erasure/EGlobalEnv"[label="EGlobalEnv", color=tan]
"erasure/ErasureCorrectness"[label="ErasureCorrectness", color=tan]
"template-coq/utils" -> "template-coq/utils/wGraph"
"pcuic/PCUICConfluence" -> "pcuic/PCUICContextConversion"
"pcuic/PCUICRetyping" -> "erasure/EInversion"
"template-coq/Typing" -> "checker/Checker"
"erasure/Prelim" -> "erasure/EInversion"
"pcuic/PCUICChecker" -> "pcuic/PCUICPretty"
"pcuic/PCUICUnivSubst" -> "pcuic/PCUICTyping"
"erasure/Prelim"[label="Prelim", color=tan]
"template-coq/utils/LibHypsNaming"[label="LibHypsNaming", color=aquamarine]
"pcuic/PCUICLiftSubst"[label="PCUICLiftSubst", color=lemonchiffon1]
"checker/Checker" -> "checker/Retyping"
"template-coq/TemplateMonad/Extractable"[label="Extractable", color=aquamarine]
"template-coq/Typing" -> "checker/WcbvEval"
"template-coq/WfInv" -> "pcuic/TemplateToPCUICCorrectness"
"safechecker/PCUICSafeChecker" -> "erasure/Prelim"
"checker/Substitution"[label="Substitution", color=seagreen3]
"template-coq/utils/wGraph" -> "template-coq/common/uGraph"
"template-coq/All" -> "checker/All"
"checker/WeakeningEnv"[label="WeakeningEnv", color=seagreen3]
"template-coq/monad_utils" -> "pcuic/PCUICCheckerCompleteness"
"template-coq/common/uGraph" -> "template-coq/Constants"
"checker/Weakening"[label="Weakening", color=seagreen3]
"pcuic/PCUICWcbvEval" -> "erasure/EArities"
}
